#!/bin/bash
# validates the article-json found in the `./article-json` directory.
# this directory is populated by the `generate-article-json.sh` script.

set -e

article_json_path="${1:-article-json}" # no trailing slashes

# trap ctrl-c and call ctrl_c()
trap ctrl_c INT
function ctrl_c() {
    exit 1
}

# clean up
rm -f validation.log    # generated by `src/validate_article_json.py`
rm -f validate.log      # generated by `src/validate.py`
rm -rf "$article_json_path/valid/" "$article_json_path/invalid/" "$article_json_path/patched/"

# fetch latest validator
arch=$(uname -m)
fname=""
if [ "$arch" = "x86_64" ]; then
    fname="linux-amd64"
fi

# aka "ARM64"
if [ "$arch" = "aarch64" ]; then
    fname="linux-arm64"
fi

if [ -z "$fname" ]; then
    echo "unsupported architecture: $arch"
    exit 1
fi

if [ ! -e validate-article-json ]; then
    wget "https://github.com/elifesciences/validate-article-json/releases/latest/download/$fname" \
        --quiet \
        --output-document=validate-article-json
    chmod +x validate-article-json
else 
    echo "validate-article-json found, checking"
    wget "https://github.com/elifesciences/validate-article-json/releases/latest/download/$fname.sha256" \
        --quiet \
        --output-document=validate-article-json.sha256
    sed -ie 's/linux-amd64/validate-article-json/' validate-article-json.sha256
    sha256sum --check validate-article-json.sha256 || {
        printf "updating validate-article-json ... "
        rm validate-article-json
        wget "https://github.com/elifesciences/validate-article-json/releases/latest/download/$fname" \
            --quiet \
            --output-document=validate-article-json
        chmod +x validate-article-json
        printf "done\n"
    }
fi

# validate
sample="-1"         # '-1' is 'all' articles (do not sample)
num_workers="0"    # '-1' is unbounded, '0' is core count, anything else is abitrary.
buffer_size="2500"  # number of articles to keep in memory at once. 2.5k is ~5GB RAM
time ./validate-article-json \
    --schema-root schema/api-raml/ \
    --article-json "$article_json_path" \
    --sample-size "$sample" \
    --num-workers "$num_workers" \
    --buffer-size "$buffer_size"
